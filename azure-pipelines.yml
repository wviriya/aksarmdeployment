# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  resourceGroup: 'aks-arm3-rg'
  clusterName: 'aksdemo3'
  namespace: 'ingress-nginx'
  namespaces: 'ingress-nginx,dev'
  isNewCluster: true

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Victor-DevOps'
    subscriptionId: '$(subscriptionId)'
    action: 'Create Or Update Resource Group'
    resourceGroupName: $(resourceGroup)
    location: 'Southeast Asia'
    templateLocation: 'Linked artifact'
    csmFile: '$(System.DefaultWorkingDirectory)/templates/template.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/templates/parameters.json'
    overrideParameters: '-clusterName $(clusterName) -doRoleAssignment $(isNewCluster)'
    deploymentMode: 'Incremental'

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Victor-DevOps'
    scriptType: 'pscore'
    scriptLocation: 'scriptPath'
    scriptPath: '$(System.DefaultWorkingDirectory)/scripts/create-namespaces.ps1'
    arguments: '$(resourceGroup) $(clusterName) $(namespaces)'
- task: HelmInstaller@1
  inputs:
    helmVersionToInstall: 'latest'
- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'Victor-DevOps'
    azureResourceGroup: '$(resourceGroup)'
    kubernetesCluster: '$(clusterName)'
    namespace: '$(namespace)'
    command: 'install'
    chartType: 'FilePath'
    chartPath: '$(System.DefaultworkingDirectory)/charts/ingress-nginx'
    releaseName: '$(namespace)'


